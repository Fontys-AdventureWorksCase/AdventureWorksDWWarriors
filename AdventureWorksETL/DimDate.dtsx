<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/22/2021 9:56:27 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WIN-IMLUOESP5LO"
  DTS:CreatorName="WIN-IMLUOESP5LO\teun"
  DTS:DTSID="{DE148B3E-D6F6-4F14-A3D1-E71782D841C6}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.157"
  DTS:LocaleID="1043"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="6"
  DTS:VersionGUID="{9F876F92-CB18-436D-BAA9-7845C9E0A7B1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create and populate Date Table if not exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D7F435DE-CB5E-4396-B913-BFFE0B190B32}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create and populate Date Table if not exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0B8749D6-A7DB-4D28-8408-E43B59EE8238}"
          SQLTask:SqlStatementSource="IF OBJECT_ID(N'dbo.Dim_Date', N'U') IS NULL &#xA;BEGIN&#xA;&#xA;CREATE TABLE [dbo].[Dim_Date] (&#xA;   [DateKey] [int] NOT NULL,&#xA;   [Date] [date] NOT NULL,&#xA;   [Day] [tinyint] NOT NULL,&#xA;   [DaySuffix] [char](2) NOT NULL,&#xA;   [Weekday] [tinyint] NOT NULL,&#xA;   [WeekDayName] [varchar](10) NOT NULL,&#xA;   [WeekDayName_Short] [char](3) NOT NULL,&#xA;   [WeekDayName_FirstLetter] [char](1) NOT NULL,&#xA;   [DOWInMonth] [tinyint] NOT NULL,&#xA;   [DayOfYear] [smallint] NOT NULL,&#xA;   [WeekOfMonth] [tinyint] NOT NULL,&#xA;   [WeekOfYear] [tinyint] NOT NULL,&#xA;   [Month] [tinyint] NOT NULL,&#xA;   [MonthName] [varchar](10) NOT NULL,&#xA;   [MonthName_Short] [char](3) NOT NULL,&#xA;   [MonthName_FirstLetter] [char](1) NOT NULL,&#xA;   [Quarter] [tinyint] NOT NULL,&#xA;   [QuarterName] [varchar](6) NOT NULL,&#xA;   [Year] [int] NOT NULL,&#xA;   [MMYYYY] [char](6) NOT NULL,&#xA;   [MonthYear] [char](7) NOT NULL,&#xA;   IsWeekend BIT NOT NULL,&#xA;   IsHoliday BIT NOT NULL,&#xA;   HolidayName VARCHAR(20) NULL,&#xA;   SpecialDays VARCHAR(20) NULL,&#xA;   [FinancialYear] [int] NULL,&#xA;   [FinancialQuater] [int] NULL,&#xA;   [FinancialMonth] [int] NULL,&#xA;   [FirstDateofYear] DATE NULL,&#xA;   [LastDateofYear] DATE NULL,&#xA;   [FirstDateofQuater] DATE NULL,&#xA;   [LastDateofQuater] DATE NULL,&#xA;   [FirstDateofMonth] DATE NULL,&#xA;   [LastDateofMonth] DATE NULL,&#xA;   [FirstDateofWeek] DATE NULL,&#xA;   [LastDateofWeek] DATE NULL,&#xA;   CurrentYear SMALLINT NULL,&#xA;   CurrentQuater SMALLINT NULL,&#xA;   CurrentMonth SMALLINT NULL,&#xA;   CurrentWeek SMALLINT NULL,&#xA;   CurrentDay SMALLINT NULL,&#xA;   PRIMARY KEY CLUSTERED ([DateKey] ASC)&#xA;   )&#xA;&#xA;SET NOCOUNT ON&#xA;&#xA;DECLARE @CurrentDate DATE = '2011-05-01'&#xA;DECLARE @EndDate DATE = '2014-08-01'&#xA;&#xA;WHILE @CurrentDate &lt; @EndDate&#xA;BEGIN&#xA;   INSERT INTO [dbo].[Dim_Date] (&#xA;      [DateKey],&#xA;      [Date],&#xA;      [Day],&#xA;      [DaySuffix],&#xA;      [Weekday],&#xA;      [WeekDayName],&#xA;      [WeekDayName_Short],&#xA;      [WeekDayName_FirstLetter],&#xA;      [DOWInMonth],&#xA;      [DayOfYear],&#xA;      [WeekOfMonth],&#xA;      [WeekOfYear],&#xA;      [Month],&#xA;      [MonthName],&#xA;      [MonthName_Short],&#xA;      [MonthName_FirstLetter],&#xA;      [Quarter],&#xA;      [QuarterName],&#xA;      [Year],&#xA;      [MMYYYY],&#xA;      [MonthYear],&#xA;      [IsWeekend],&#xA;      [IsHoliday],&#xA;      [FirstDateofYear],&#xA;      [LastDateofYear],&#xA;      [FirstDateofQuater],&#xA;      [LastDateofQuater],&#xA;      [FirstDateofMonth],&#xA;      [LastDateofMonth],&#xA;      [FirstDateofWeek],&#xA;      [LastDateofWeek]&#xA;      )&#xA;   SELECT DateKey = YEAR(@CurrentDate) * 10000 + MONTH(@CurrentDate) * 100 + DAY(@CurrentDate),&#xA;      DATE = @CurrentDate,&#xA;      Day = DAY(@CurrentDate),&#xA;      [DaySuffix] = CASE &#xA;         WHEN DAY(@CurrentDate) = 1&#xA;            OR DAY(@CurrentDate) = 21&#xA;            OR DAY(@CurrentDate) = 31&#xA;            THEN 'st'&#xA;         WHEN DAY(@CurrentDate) = 2&#xA;            OR DAY(@CurrentDate) = 22&#xA;            THEN 'nd'&#xA;         WHEN DAY(@CurrentDate) = 3&#xA;            OR DAY(@CurrentDate) = 23&#xA;            THEN 'rd'&#xA;         ELSE 'th'&#xA;         END,&#xA;      WEEKDAY = DATEPART(dw, @CurrentDate),&#xA;      WeekDayName = DATENAME(dw, @CurrentDate),&#xA;      WeekDayName_Short = UPPER(LEFT(DATENAME(dw, @CurrentDate), 3)),&#xA;      WeekDayName_FirstLetter = LEFT(DATENAME(dw, @CurrentDate), 1),&#xA;      [DOWInMonth] = DAY(@CurrentDate),&#xA;      [DayOfYear] = DATENAME(dy, @CurrentDate),&#xA;      [WeekOfMonth] = DATEPART(WEEK, @CurrentDate) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM, 0, @CurrentDate), 0)) + 1,&#xA;      [WeekOfYear] = DATEPART(wk, @CurrentDate),&#xA;      [Month] = MONTH(@CurrentDate),&#xA;      [MonthName] = DATENAME(mm, @CurrentDate),&#xA;      [MonthName_Short] = UPPER(LEFT(DATENAME(mm, @CurrentDate), 3)),&#xA;      [MonthName_FirstLetter] = LEFT(DATENAME(mm, @CurrentDate), 1),&#xA;      [Quarter] = DATEPART(q, @CurrentDate),&#xA;      [QuarterName] = CASE &#xA;         WHEN DATENAME(qq, @CurrentDate) = 1&#xA;            THEN 'First'&#xA;         WHEN DATENAME(qq, @CurrentDate) = 2&#xA;            THEN 'second'&#xA;         WHEN DATENAME(qq, @CurrentDate) = 3&#xA;            THEN 'third'&#xA;         WHEN DATENAME(qq, @CurrentDate) = 4&#xA;            THEN 'fourth'&#xA;         END,&#xA;      [Year] = YEAR(@CurrentDate),&#xA;      [MMYYYY] = RIGHT('0' + CAST(MONTH(@CurrentDate) AS VARCHAR(2)), 2) + CAST(YEAR(@CurrentDate) AS VARCHAR(4)),&#xA;      [MonthYear] = CAST(YEAR(@CurrentDate) AS VARCHAR(4)) + UPPER(LEFT(DATENAME(mm, @CurrentDate), 3)),&#xA;      [IsWeekend] = CASE &#xA;         WHEN DATENAME(dw, @CurrentDate) = 'Sunday'&#xA;            OR DATENAME(dw, @CurrentDate) = 'Saturday'&#xA;            THEN 1&#xA;         ELSE 0&#xA;         END,&#xA;      [IsHoliday] = 0,&#xA;      [FirstDateofYear] = CAST(CAST(YEAR(@CurrentDate) AS VARCHAR(4)) + '-01-01' AS DATE),&#xA;      [LastDateofYear] = CAST(CAST(YEAR(@CurrentDate) AS VARCHAR(4)) + '-12-31' AS DATE),&#xA;      [FirstDateofQuater] = DATEADD(qq, DATEDIFF(qq, 0, GETDATE()), 0),&#xA;      [LastDateofQuater] = DATEADD(dd, - 1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) + 1, 0)),&#xA;      [FirstDateofMonth] = CAST(CAST(YEAR(@CurrentDate) AS VARCHAR(4)) + '-' + CAST(MONTH(@CurrentDate) AS VARCHAR(2)) + '-01' AS DATE),&#xA;      [LastDateofMonth] = EOMONTH(@CurrentDate),&#xA;      [FirstDateofWeek] = DATEADD(dd, - (DATEPART(dw, @CurrentDate) - 1), @CurrentDate),&#xA;      [LastDateofWeek] = DATEADD(dd, 7 - (DATEPART(dw, @CurrentDate)), @CurrentDate)&#xA;&#xA;   SET @CurrentDate = DATEADD(DD, 1, @CurrentDate)&#xA;END&#xA;&#xA;--Update Holiday information&#xA;UPDATE Dim_Date&#xA;SET [IsHoliday] = 1,&#xA;   [HolidayName] = 'Christmas'&#xA;WHERE [Month] = 12&#xA;   AND [DAY] = 25&#xA;&#xA;UPDATE Dim_Date&#xA;SET SpecialDays = 'Valentines Day'&#xA;WHERE [Month] = 2&#xA;   AND [DAY] = 14&#xA;&#xA;--Update current date information&#xA;UPDATE Dim_Date&#xA;SET CurrentYear = DATEDIFF(yy, GETDATE(), DATE),&#xA;   CurrentQuater = DATEDIFF(q, GETDATE(), DATE),&#xA;   CurrentMonth = DATEDIFF(m, GETDATE(), DATE),&#xA;   CurrentWeek = DATEDIFF(ww, GETDATE(), DATE),&#xA;   CurrentDay = DATEDIFF(dd, GETDATE(), DATE)&#xA;&#xA;&#xA;END;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="287,42"
          Id="Package\Create and populate Date Table if not exists"
          TopLeft="375,120" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>